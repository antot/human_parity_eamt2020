signtest_3way <- function (filename, my_alt = "two.sided", my_debug=F, ties=F) {
#system1 is HT
#system2 is MT
df <- read.csv(filename)
a = 0 # mt better
b = 0 # ht better
t = 0 # ties
for (row in 1:nrow(df)){
if(my_debug)
print(c(row, df[row, "system1rank"], df[row, "system2rank"]))
if(df[row, "system1rank"] > df[row, "system2rank"]) {
a = a+1
} else if (df[row, "system1rank"] < df[row, "system2rank"]) {
b = b+1
} else {
t = t+1
}
}
#if(my_debug)
print(c(a, b, t))
if(!ties)
print(binom.test(b, a+b, alternative = my_alt))
else
print(binom.test(round(b+0.5*t), a+b+t, alternative = my_alt))
}
# TODO make code less ad-hoc
signtest <- function (filename, my_alt = "two.sided", my_debug=F) {
df <- read.csv(filename)
#pairs: ref-ht, ref-mt, ht-mt
a_ref_ht = 0; a_ref_mt = 0; a_ht_mt = 0 # t2 better
b_ref_ht = 0; b_ref_mt = 0; b_ht_mt = 0 # t1 better
t_ref_ht = 0; t_ref_mt = 0; t_ht_mt = 0 # ties
for (row in 1:nrow(df)){
sys1_id = toString(df[row, "system1Id"])
sys2_id = toString(df[row, "system2Id"])
sys1_rank = df[row, "system1rank"]
sys2_rank = df[row, "system2rank"]
#print(c(row, sys1_id, sys1_rank, sys2_id, sys2_rank))
if(sys1_rank > sys2_rank) {
if(sys2_id == "ht"){
a_ref_ht = a_ref_ht+1
} else if(sys1_id == "ht") {
a_ht_mt = a_ht_mt+1
} else if (sys1_id == "ref" && sys2_id == "mt"){
a_ref_mt = a_ref_mt+1
} else {
print("Unexpected error!")
}
} else if (sys1_rank < sys2_rank) {
if(sys2_id == "ht"){
b_ref_ht = b_ref_ht+1
} else if(sys1_id == "ht") {
b_ht_mt = b_ht_mt+1
} else if (sys1_id == "ref" && sys2_id == "mt"){
b_ref_mt = b_ref_mt+1
} else {
print("Unexpected error!")
}
} else {
if(sys2_id == "ht"){
t_ref_ht = t_ref_ht+1
} else if(sys1_id == "ht") {
t_ht_mt = t_ht_mt+1
} else if (sys1_id == "ref" && sys2_id == "mt"){
t_ref_mt = t_ref_mt+1
} else {
print("Unexpected error!")
}
}
}
print(c("REF-HT", a_ref_ht, b_ref_ht, t_ref_ht))
print(binom.test(b_ref_ht, a_ref_ht+b_ref_ht, alternative = my_alt))
print(binom.test(round(b_ref_ht+0.5*t_ref_ht), a_ref_ht+b_ref_ht+t_ref_ht, alternative = my_alt))
print(c("REF-MT", a_ref_mt, b_ref_mt, t_ref_mt))
print(binom.test(b_ref_mt, a_ref_mt+b_ref_mt, alternative = my_alt))
print(binom.test(round(b_ref_mt+0.5*t_ref_mt), a_ref_mt+b_ref_mt+t_ref_mt, alternative = my_alt))
print(c("HT-MT ", a_ht_mt, b_ht_mt, t_ht_mt))
print(binom.test(b_ht_mt, a_ht_mt+b_ht_mt, alternative = my_alt))
print(binom.test(round(b_ht_mt+0.5*t_ht_mt), a_ht_mt+b_ht_mt+t_ht_mt, alternative = my_alt))
}
# Claim at WMT: super human performance (MT>HT). Hypothesis: HT=MT
signtest_3way("../results/appraise/export/ende/ende_001_020.csv", my_debug = T)
# Claim at WMT: super human performance (MT>HT). Hypothesis: HT=MT
signtest_3way("../data/appraise_export/ende/ende_001_020.csv", my_debug = T)
# Claim at WMT: super human performance (MT>HT). Hypothesis: HT=MT
signtest_3way("../data/appraise_export/ende/ende_001_020.csv")
signtest_3way("../results/appraise/export/ende/ende_001_020.ts.csv")
signtest_3way("../data/appraise_export/ende/ende_001_020.ts.csv")
signtest_3way("../data/appraise_export/ende/ende_001_020.us.csv")
signtest_3way("../data/appraise_export/enru/enru_001_020.ts.csv")
signtest_3way("../data/appraise_export/enru/enru_001_020.tsns.csv") #p<0.01
signtest_3way("../data/appraise_export/enru/enru_001_020.us.csv")
signtest_3way("../data/appraise_export/enru/enru_001_020.n1.csv") #p<0.01
signtest_3way("../data/appraise_export/enru/enru_001_020.u2.csv") #p=0.2
signtest_3way("../data/appraise_export/enru/enru_001_020.n1.csv") #p<0.001
signtest_3way("../data/appraise_export/enru/enru_001_020.n2.csv") #p=0.2
signtest_3way("../data/appraise_export/enru/enru_001_020.n2.csv")
signtest_3way("../data/appraise_export/enru/enru_001_020.u1.csv") #p=0.2
signtest_3way("../data/appraise_export/enru/enru_001_020.t1.csv") #p=1
signtest_3way("../data/appraise_export/enru/enru_001_020.t2.csv") #p=0.16
# Claim at WMT: parity (MT=HT). Hypothesis: HT better than MT
signtest("../data/appraise_export/deen/deen_001_020.csv")
signtest("../data/appraise_export/deen/deen_001_020.ts.csv")
signtest("../data/appraise_export/deen/deen_001_020.u1.csv") # REF-HT p<0.001, REF-MT, HT-MT
signtest("../data/appraise_export/deen/deen_001_020.ts.csv") # REF-HT p<0.001, REF-MT, HT-MT
signtest_3way <- function (filename, my_alt = "two.sided", my_debug=F, ties=F) {
#system1 is HT
#system2 is MT
df <- read.csv(filename)
a = 0 # mt better
b = 0 # ht better
t = 0 # ties
for (row in 1:nrow(df)){
if(my_debug)
print(c(row, df[row, "system1rank"], df[row, "system2rank"]))
if(df[row, "system1rank"] > df[row, "system2rank"]) {
a = a+1
} else if (df[row, "system1rank"] < df[row, "system2rank"]) {
b = b+1
} else {
t = t+1
}
}
#if(my_debug)
print(c(a, b, t))
if(!ties)
print(binom.test(b, a+b, alternative = my_alt))
else
print(binom.test(round(b+0.5*t), a+b+t, alternative = my_alt))
}
# TODO make code less ad-hoc
signtest <- function (filename, my_alt = "two.sided", my_debug=F, ties=F) {
df <- read.csv(filename)
#pairs: ref-ht, ref-mt, ht-mt
a_ref_ht = 0; a_ref_mt = 0; a_ht_mt = 0 # t2 better
b_ref_ht = 0; b_ref_mt = 0; b_ht_mt = 0 # t1 better
t_ref_ht = 0; t_ref_mt = 0; t_ht_mt = 0 # ties
for (row in 1:nrow(df)){
sys1_id = toString(df[row, "system1Id"])
sys2_id = toString(df[row, "system2Id"])
sys1_rank = df[row, "system1rank"]
sys2_rank = df[row, "system2rank"]
#print(c(row, sys1_id, sys1_rank, sys2_id, sys2_rank))
if(sys1_rank > sys2_rank) {
if(sys2_id == "ht"){
a_ref_ht = a_ref_ht+1
} else if(sys1_id == "ht") {
a_ht_mt = a_ht_mt+1
} else if (sys1_id == "ref" && sys2_id == "mt"){
a_ref_mt = a_ref_mt+1
} else {
print("Unexpected error!")
}
} else if (sys1_rank < sys2_rank) {
if(sys2_id == "ht"){
b_ref_ht = b_ref_ht+1
} else if(sys1_id == "ht") {
b_ht_mt = b_ht_mt+1
} else if (sys1_id == "ref" && sys2_id == "mt"){
b_ref_mt = b_ref_mt+1
} else {
print("Unexpected error!")
}
} else {
if(sys2_id == "ht"){
t_ref_ht = t_ref_ht+1
} else if(sys1_id == "ht") {
t_ht_mt = t_ht_mt+1
} else if (sys1_id == "ref" && sys2_id == "mt"){
t_ref_mt = t_ref_mt+1
} else {
print("Unexpected error!")
}
}
}
print(c("REF-HT", a_ref_ht, b_ref_ht, t_ref_ht))
if(!ties)
print(binom.test(b_ref_ht, a_ref_ht+b_ref_ht, alternative = my_alt))
else
print(binom.test(round(b_ref_ht+0.5*t_ref_ht), a_ref_ht+b_ref_ht+t_ref_ht, alternative = my_alt))
print(c("REF-MT", a_ref_mt, b_ref_mt, t_ref_mt))
if(!ties)
print(binom.test(b_ref_mt, a_ref_mt+b_ref_mt, alternative = my_alt))
else
print(binom.test(round(b_ref_mt+0.5*t_ref_mt), a_ref_mt+b_ref_mt+t_ref_mt, alternative = my_alt))
print(c("HT-MT ", a_ht_mt, b_ht_mt, t_ht_mt))
if(!ties)
print(binom.test(b_ht_mt, a_ht_mt+b_ht_mt, alternative = my_alt))
else
print(binom.test(round(b_ht_mt+0.5*t_ht_mt), a_ht_mt+b_ht_mt+t_ht_mt, alternative = my_alt))
}
# Claim at WMT: super human performance (MT>HT). Hypothesis: HT=MT
signtest_3way("../data/appraise_export/ende/ende_001_020.csv")
signtest_3way("../data/appraise_export/ende/ende_001_020.ts.csv")
signtest_3way("../data/appraise_export/ende/ende_001_020.us.csv")
signtest_3way("../data/appraise_export/ende/ende_001_020.t1.csv")
signtest_3way("../data/appraise_export/ende/ende_001_020.t2.csv")
signtest_3way("../data/appraise_export/ende/ende_001_020.u1.csv")
signtest_3way("../data/appraise_export/ende/ende_001_020.u2.csv")
signtest_3way("../data/appraise_export/ende/ende_001_020.u3.csv")
signtest_3way("../data/appraise_export/enru/enru_001_020.csv") #p<0.01
signtest_3way("../data/appraise_export/enru/enru_001_020.tsns.csv") #p<0.01
signtest_3way("../data/appraise_export/enru/enru_001_020.csv") #p<0.01
signtest_3way("../data/appraise_export/enru/enru_001_020.ts.csv") #p<0.01
signtest_3way("../data/appraise_export/enru/enru_001_020.us.csv") #p<0.01
signtest_3way("../data/appraise_export/enru/enru_001_020.t1.csv")
signtest_3way("../data/appraise_export/enru/enru_001_020.t2.csv")
signtest_3way("../data/appraise_export/enru/enru_001_020.t3.csv") #p<0.001
signtest_3way("../data/appraise_export/enru/enru_001_020.t4.csv")
signtest_3way("../data/appraise_export/enru/enru_001_020.u1.csv")
signtest_3way("../data/appraise_export/enru/enru_001_020.u2.csv") #p<0.05
